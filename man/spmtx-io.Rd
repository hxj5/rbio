% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix.R
\name{spmtx-io}
\alias{spmtx-io}
\alias{mtx_load_sparse_mtx}
\alias{mtx_save_sparse_mtx}
\alias{mtx_load_sparse_mtx_n}
\alias{mtx_save_sparse_mtx_n}
\title{Sparse Matrix Input/Output}
\usage{
mtx_load_sparse_mtx(
  in_dir,
  mtx_fn,
  row_fn = NULL,
  col_fn = NULL,
  row_header = FALSE,
  col_header = FALSE,
  row_index = 1,
  col_index = 1
)

mtx_save_sparse_mtx(mtx, out_dir, mtx_fn, row_fn = NULL, col_fn = NULL)

mtx_load_sparse_mtx_n(
  in_dir,
  mtx_fn_list,
  row_fn = NULL,
  col_fn = NULL,
  row_header = FALSE,
  col_header = FALSE,
  row_index = 1,
  col_index = 1
)

mtx_save_sparse_mtx_n(
  mtx_list,
  out_dir,
  mtx_fn_list,
  row_fn = NULL,
  col_fn = NULL
)
}
\arguments{
\item{in_dir}{A string. Path to the input directory.}

\item{mtx_fn}{A string. Path to the file storing the sparse matrix, in
Matrix Market Format.}

\item{row_fn}{A string. Path to the file storing the annotation of matrix
rows. Setting to \code{NULL} if there is no such annotation.}

\item{col_fn}{A string. Path to the file storing the annotation of matrix
columns. Setting to \code{NULL} if there is no such annotation.}

\item{row_header}{A bool. Whether \code{row_fn} has header.}

\item{col_header}{A bool. Whether \code{col_fn} has header.}

\item{row_index}{An integer or a string. The index (integer) or name
(string) of the column in \code{row_fn} that stores the matrix row annotation.}

\item{col_index}{An integer or a string. The index (integer) or name
(string) of the column in \code{col_fn} that stores the matrix column
annotation.}

\item{mtx}{A matrix. It could be either sparse matrix or regular matrix.}

\item{out_dir}{A string. Path to the output directory.}

\item{mtx_fn_list}{A list of file path to sparse matrices.}

\item{mtx_list}{A list of sparse matrices.}
}
\value{
\itemize{
\item The \code{mtx_load_sparse_mtx()} returns a list of three elements:
(1) \code{mtx}: a sparse matrix of \code{dgCMatrix} class;
(2) \code{row_anno}: a dataframe of row annotation if provided, otherwise
\code{NULL};
(3) \code{col_anno}: a dataframe of column annotation if provided, otherwise
\code{NULL}.
\item The \code{mtx_save_sparse_mtx()} returns Void.
\item The \code{mtx_load_sparse_mtx_n()} returns a list of three elements:
(1) \code{mtx}: a list of sparse matrices of \code{dgCMatrix} class;
(2) \code{row_anno}: a dataframe of row annotation if provided, otherwise
\code{NULL};
(3) \code{col_anno}: a dataframe of column annotation if provided, otherwise
\code{NULL}.
\item The \code{mtx_save_sparse_mtx_n()} returns Void.
}
}
\description{
These functions are aimed to load and save the sparse matrices in
Matrix Market Format, together with its annotation files.
}
\details{
The \code{mtx_load_sparse_mtx()} and the \code{mtx_save_sparse_mtx()} are aimed to
read and write single sparse matrix, while the \code{mtx_load_sparse_mtx_n()}
and the \code{mtx_save_sparse_mtx_n()} are aimed to read and write a list of
sparse matrices that share row and column annotations.
}
\section{Notes}{

The matrix file, row annotation file (if available) and column annotation
file (if available) should be in the same directory.

When both \code{mtx_list} and \code{mtx_fn_list} are specified, the elements of them
should be in the same order and have the same names (if available).
}

\examples{
m <- matrix(rpois(20, 1), nrow = 5)
rownames(m) <- paste0("x", 1:5)
colnames(m) <- paste0("y", 1:4)
\dontrun{
mtx_save_sparse_mtx(m, "~/test_rrbio", "matrix.mtx", "rows.tsv", "cols.tsv")
res <- mtx_load_sparse_mtx("~/test_rrbio", "matrix.mtx", "rows.tsv", "cols.tsv")
m2 <- res[["mtx"]]

mtx_list <- list(mtx1 = m, mtx2 = m2)
mtx_fn_list <- list(mtx1 = "matrix1.mtx", mtx2 = "matrix2.mtx")

mtx_save_sparse_mtx_n(mtx_list, "~/test_rrbio", mtx_fn_list, "rows.tsv", "cols.tsv")
res2 <- mtx_load_sparse_mtx_n("~/test_rrbio", mtx_fn_list, "rows.tsv", "cols.tsv")
mtx_list2 <- res2[["mtx"]]
}

}
\seealso{
\code{\link[Matrix:dgCMatrix-class]{dgCMatrix}} and
\code{\link[Matrix:dgTMatrix-class]{dgTMatrix}}
}
